#!/usr/bin/env python
# vim: set fileencoding=utf-8 :

import subprocess

# Function to run a git command
def git(*args, **kwargs):
    args = list(args)
    args.insert(0, 'git')
    kwargs['stdout'] = subprocess.PIPE
    kwargs['stderr'] = subprocess.PIPE
    proc = subprocess.Popen(args, **kwargs)
    (stdout, stderr) = proc.communicate()
    if proc.returncode != 0:
        print "git command failed"
    return stdout.rstrip('\n')

# Get the names of all authors along with their respective commit counts
shortlog = git('shortlog', '-s', '-n', '--no-merges').replace('\t', ' ').split('\n')

# Find the length of the longest name
# (in order to set the width of the first column to display)
longest_name_len = 0
for entry in shortlog:
    name = entry.lstrip().split(' ', 1)[1]

    # Names often contain unicode characters, so we need to decode them first
    u_name = name.decode('utf-8')

    name_len = len(u_name)

    if name_len > longest_name_len:
        longest_name_len = name_len

# Write the header
print ("Name".center(longest_name_len) + "    " + "Commits".center(7) + "    " +
    "Lines Added".center(11) + "    " + "Lines Deleted".center(13))

# Write each author's statistics
for entry in shortlog:
    num_commits, name = entry.lstrip().split(' ', 1)

    author_arg = '--author=' + name
    stats_entries = git('log', author_arg, '--pretty=tformat:', '--numstat').split('\n')

    total_additions = 0
    total_deletions = 0

    for stats_entry in stats_entries:
        num_additions, num_deletions, file_name = stats_entry.split('\t')
        total_additions += int(num_additions)
        total_deletions += int(num_deletions)

    u_name = name.decode('utf-8')
    print (u_name.ljust(longest_name_len) + "    " + num_commits.rjust(6) +
        "    " + str(total_additions).rjust(9) + "    " +
        str(total_deletions).rjust(11))
